// Defino las interfaces de los SP: tipo de parámetros y retorno + lógica que resuelve.
//Formato: retorno nombreDelProcedure(tipoParametro param1, tipoParametro param2...)


roles_disponibles()
//Hace el select para devovlerme todos los roles disponibles, o sea todos los de la tabla que estén
//habilitados

hoteles_disponibles()
//Hace el select para devovlerme todos los hoteles habilitados de la tabla.

documentos_disponibles()
//Hace el select para devovlerme todos los tipos de documento de la tabla.

funcionalidades_disponibles()
//Hace el select para devovlerme todas las funcionalidades habilitadas de la tabla.


login(varchar usuario, varchar password, out int error)
//Hace el select y busca el usuario que tiene ese username, chequea el password contra el que está
//encriptado, devuelve la fila con los datos del usuario que saco del select. En cuanto al error, 
//deuelve 0 en caso de estar todo bien, -1 si el password es incorrecto, -2 si el user no existe, -3 si
//el usuario está inhabilitado por intentos incorrectos.

obtener_funcionalidades(int id_rol)
//Hace el select para devolver todas las funcionalidades de un rol en particular;

obtener_roles(int id_usuario)
//Hace el select para devolver todos los roles habilitados de un ususario;

obtener_hoteles(int id_usuario)
//Hace el select para devolver todos los hoteles de un usuario;

buscar_usuarios(varchar nombre,varchar apellido, varchar email, varchar username, int id_rol, int id_hotel)
//Hace un select para obtener los usuarios que matcheen con los datos dados. Cuanndo alguno de los
//parámetros no hay que usarlo para filtrar (no se eligió ese filtro) los vachar vienen vacíos ("")
//para q si pones un like ande igual, y los id de rol y hotel vienen en -1.

buscar_usuario_por_id(int id_usuario)
//Hace el select para devovlerme toda la fila con el usuario que tiene ese id.

baja_usuario(int id_usuario)
// Le da de baja (lógica) al usuario (cambiñandole el campo correspondiente);

//------------------Se necesitan SPs para insertar,borrar, y actualizar.-------------------------//
//El formato del nombre siempre sera "insertar_"+nombreDeTabla y los 
//parámetros que recibirá serán todos los campos a completar de la tabla en el orden en que están en 
//la tabla. El valor de retorno es si hubo algun error en la insercion.


int insertar_usuario( username, password, nombre, apellido, Id_tipo_dni, dni, mail, telefono, direccion, fechaNacimiento);
//Devuelve -4 si el username esta repetido.(se violo constraint unique, @@error =2627 creo q es)

int actualizar_usuario(id,username, password, nombre, apellido, Id_tipo_dni, dni, mail, telefono, direccion, fechaNacimiento);
//devuelve -4 si username esta repetido

insertar_usuario_x_rol(id_usuario, id_rol)

borrar_usuario_x_rol(id_usuario, id_rol)

insertar_usuario_x_hotel(id_usuario, id_hotel)

borrar_usuario_x_hotel(id_usuario, id_hotel)

insertar_cliente(nombre, apellido,id_tipo_identificacion, nroId, mail, telefono, calle, localidad, fechaNacimiento)
//Devuelve -5 si se repite el email. Devuelve -6 si se repite la pk (tipo y número de id). Le setea habilitado en 1 (true)

actualizar_cliente(id,nombre, apellido,id_tipo_identificacion, nroId, mail, telefono, calle, localidad, fechaNacimiento,habilitado)
//Devuelve -5 si se repite el email. Devuelve -6 si se repite la pk (tipo y número de id).

buscar_cliente_por_id(int id_cliente)
//Hace el select para devovlerme toda la fila con el cliente que tiene ese id.

buscar_clientes(nombre, apellido, email, nroId, Id_tipo_identificación)
//Hace un select para obtener los usuarios que matcheen con los datos dados. Cuanndo alguno de los
//parámetros no hay que usarlo para filtrar (no se eligió ese filtro) los vachar vienen vacíos ("")
//para q si pones un like ande igual, y lel id de tipo identificación viene en -1.

buscar_habitaciones(int id_hotel,int numero_habitacion, int piso_habitacion, string ubicacion_habitacion , int id_tipo_habitacion, string descripcion_habitacion)
//Hace un select para obtener las habitaciones que matcheen con los datos dados. Cuanndo alguno de los
//parámetros no hay que usarlo para filtrar (no se eligió ese filtro) los vachar vienen vacíos ("")
//para q si pones un like ande igual, y el id de tipo habitacion viene en -1.

buscar_habitacion_por_id(int id_habitacion)
//Hace el select para traer toda la fila de la habitacion correspondiente a ese Id

baja_logica_habitacion(id_habitacion)
//poner en baja logica el campo correspondiente

insertar_reserva(id_regimen, fecha_inicio, fecha_fin, id_cliente,fecha_realizacion)
//Inserta una nueva reserva, creo q no tendria por qué dar error nunca. Setea el estado de la reserva al 
//codigo q le correspoidne por reserva correcta;

insertar_habitacion_reservada(id_reserva, id_habitacion)
//Agrega una habitacion reservada. Si ya esá asociada a otra reserva en fechas que se superponen, debe fallar y devovler -7

borrar_habitacion_reservada(id_reserva, id_habitacion)
//Borra una habitacion reservada

buscar_habiaciones(id_hotel, id_tipo_habitacion, int cantidad, fecha_inicio, fecha_fin)
//hace un select para devovler las top cantidad habitaciones que hay de ese tipo en ese hotel que estén disponibles
// entre esas fechas, es decir tales que no hay otra reserva asociada q se superponga.El orden es trivial.
//Este Sp debe encargarse de cancelar las reservas pasadas de fecha y sin efectivizar q haya en el momento, como dice
//el enunciado

regimenes_disponibes(id_hotel)
//hace un select * y devuelve todos los regímenes disponibles para un hotel.

tipos_habitacion_disponibles()
//hace un select * y devuelve todos lso tipos de habitacion que hay en el sistema

buscar_reserva_por_id(id_reserva)
//Hace un select con los joins correspondientes para devovlerme las siguientes columnas para la reserva del id dado:
//fecha_fin, fecha_inicio,id_hotel_habitacion,nombre_hotel_habitacion,id_regimen_habitacon, descripcion_regimen_habitacion

obtener_habitaciones(id_reserva)
//Hace un select dodne devuelve todas las habitaciones de esa reserva. devuelve las siguentes columnas:
//id_habitacion,id_tipo_habitacion, descripcion_tipo_habitacion

actualizar_reserva(id_reserva, id regimen, fecha_inicio, fecha_fin)
//actualiza la reserva del id dado;Setea el estado de la reserva al 
//codigo q le correspoidne por reserva Modificada;

insertar_modificacion(fecha, id_reserva, ide_usuario,varchar motivo, int tipo)
//Inserta una nueva modificacion en la tabla; Si tipo es 0 es una modificacion, si tipo es 1 es una cancelacion.

int reserva_editable(id_reserva)
//Devuelve 1 si la reserva tiene estado en "reserva correcta" o "reserva modificada". si esta cancelada o con ingreso, o si no existe devuelve 0
//Tambien devuelve 0 (false) si está a menos d eun dia de efectivizarse

cancelar_reserva_no_show(id_reserva)
//setea el estado de la reserva como cancelada por no show

cancelar_reserva_clientew(id_reserva)
//setea el estado de la reserva como cancelada por el cliente

cancelar_reserva_recepcion(id_reserva)
//setea el estado de la reserva como cancelada por personal de recepcion

buscar_roles(string nombre,bool estado)
//Hace el select y trae los roles que correspondan, el nombre viene por default en "" y el estado 
//en True (el estado es distinto a la alta o baja logica)

buscar_rol_por_id(int id)
//Devuelve la fila que corresponde a ese id de rol con todas sus columnas

baja_rol(int id)
// pone en baja logica el rol correspondiente a ese id

habitaciones_de_reserva(int id_reserva)
//Hace un select para devovlerme una tabla con la ssiguientes columnas:
//id(id_habitacion_reservada), numero (numero de la habitacion reservada), clientes (cantidad de clientes q tiene asociados)

int cambiar_habitacion(id_habitacion_reservada, numero)
//Cambia el id_habitacion de una habitacion reservada por el de una habitacion del numero dado, que sea del mismo tipo y hotel que el que tenía antes.
//Si no hay habitaciones disponibles en el mismo hotel y tipo con otro número deve devovler codigo de error -8

int insertar_cliente_x_habitacion(id_habitacion_reservada, id_cliente)
//inserta un cliente x habitacion. Si ya estaba insertado devuelve -9

int reserva_ingresable(id_reserva,id_hotel)
//Devuelve 1 si la reserva tiene estado en "reserva correcta" o "reserva modificada". si esta cancelada o con ingreso, o si no existe devuelve 0
//Tambien devuelve 0 (false) si ya se pasó la fecha de inicio o si no pertenece al hotel especidicado

int reserva_egresable(id_reserva,id_hotel)
//Devuelve 1 si la reserva tiene estado en "reserva ingresada" si el estado es otro , o si no existe devuelve 0
//Tambien devuelve 0 (false) si no pertenece al hotel especidicado

registrar_ingreso_reserva(id_reserva)
//cambia el estado de la reserva por reserva ingresada

consumibles_de_reserva(id_reserva)
//Hace un select y devuelve los consumibles de esa reserva. las columnas son: id (id del producto) descripcion,
//cantidad,precio unitario, precio total (cantidad * unitario)

insertar_producto_x_habitacion_reservada(id_reserva, id_producto,cantidad)
//Inserta en la tabla esos datos. Si el producto ya estaba para esa reserva, le suma a la cantidad q tenía la cantidad ingresada;

borrar_producto_x_habitacion_reservada(id_reserva,id_producto)
//borra la fila de la tabla con ese id reserva y ese id producto

productos_disponibles()
//Hace el select para devolver todos los productos de la tabla de productos. solo id y descripcion

items_factura(id_factura)
//Hace un select que me devuelve todos los items de la factura y también devuelve un item dias Alojado y dias no alojado.
//Tambien tiene que estar el item de devolucion por all inclusive si corresponde, para esto yo lo que
//habia pensado es simplementye hacer que haya un producto "Devolucion All Inclusive" de precio -1 y cargarlo
//en los items con la cantidad igual a lo q hay q restar, para que al multiplicar se eso y reste solo.

decimal total_factura(id_factura)
//devuelve un decimal con el valor ttoald e la factura;

facturar(id_reserva, fecha_salida, modo_pago)
//Cambia el estadod e la reserva a facturado, asinga na fecha de salida y asigna el metodo de pago a la factura. 


top5estadistico_hoteles_mas_reservas_canceladas(int trimestre,int año)
//Trae los 5 hoteles con mas reservas canceladas en ese trimestre del año, con las columnas correspondientes solo a los atributos del hotel y la cantidad de reservas canceladas

top5estadistico_hoteles_mas_consumibles_facturados(int trimestre,int año)
//Trae los 5 hoteles con mas consumibles facturados en ese trimestre del año, con las columnas correspondientes solo a los atributos del hotel y la cantidad de consumibles

top5estadistico_hoteles_con_mas_periodo_inactivo(int trimestre,int año)
//Trae los 5 hoteles con mas tiempo inactivo tuvieron en el trimestre del año, con las columnas correspondientes solo a los atributos del hotel

top5estadistico_habitaciones_mas_ocupadas(int trimestre,int año)
//Trae las 5 habitaciones que mas se ocuparon en ese trimestre del año, esto es por orden, las que mas dias se ocuparon, y las que mas veces se ocuparon.
//(habitacion que se ocupo 4 dias, en 2 veces de 2 dias) >> (habitacion que se ocupo 4 dias en una vez sola),
// trae los datos de la habitacion, los dias que se ocupo, cuantas veces fue ocupada, y el nombre del hotel al que pertenece

//top5estadistico_clientes_por_puntaje(int trimestre,int año)
//Trae los 5 clientes con mas puntaje del trimestre en el año, donde cada $10 en estadías vale 1 punto y cada $5 de consumibles es 1 punto,
// de la suma de todas las facturaciones que haya tenido (independientemente del Hotel).
//Trae todos las columnas correspondientes a los atributos del Cliente

ciudades_disponibles
// todas las ciudades disponibles


buscar_hoteles(nombre_hotel, estrellas_hotel, pais_nombre, ciudad_nombre)
// Busca los hoteles que cumplan con lo pedido, de estar vacias, los strings vienen en "" y la cantidad de estrellas en 0

baja_hotel(id_hotel)
//Da de baja el hotel, y guarda el historial correspondiente indicando que entro en inactividad

buscar_hotel_por_id(id_hotel)
//trae la fila correspondiente a ese id de hotel
